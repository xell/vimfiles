*ttoc.txt*  ttoc - A regexp-based ToC of the current buffer
            Author: Tom Link, micathom at gmail com

This plugin tries to duplicate the functionality of Marc Weber's 
outline.vim (vimscript #1947) on the basis of its description and of 
vim's own |:g|. Other than outline.vim, it relies on tlib (vimscript 
#1863).

The TToC command can be used to get a quick table of contents of the 
buffer based on a given regular expression. The regexp can be defined on 
the command line, in window (w:ttoc_rx), buffer-local (b:ttoc_rx) 
variables or in global filetype-specific (g:ttoc_rx_{&filetype}) 
variables. The order actually is: [wbg]:ttoc_rx_{&filetype} > 
[wbg]:ttoc_rx.

In the list view, you can select a line and either preview it (<c-p>), 
jump there (<), close the list and jump there (<cr>).

Example: >

  " Use the default settings for the current file-type
  :TToC
  " Show all words beginning at column 1
  :TToC ^\w
  " Show 'if' statements (but not the concluding 'then' statement)
  :TToC ^\s*if\>.\{-}\ze\s\+then
  " Show 'if' statements and 3 extra lines
  :3TToC! \<if\>

The TToC with a bang works somewhat like |:g| only that you can 
browse/filter the list and select an item after reviewing the results. 
Try it out and compare (with the help file as current buffer): >

  :TToC! TToC

with >

  :g/TToC



-----------------------------------------------------------------------
Install~

Edit the vba file and type: >

    :so %

See :help vimball for details. If you have difficulties, please make 
sure, you have the current version of vimball (vimscript #1502) 
installed.

This script requires tlib (vimscript #1863) to be installed.

Suggested maps (to be set in ~/.vimrc): >
    noremap <m-c>       :TToC<cr>
    inoremap <m-c>       <c-o>:TToC<cr>

and (in case <m-t> is set to open some menu):
    noremap  <Leader>cc       :TToC<cr>
    inoremap <Leader>cc       <c-o>:TToC<cr>
    noremap  <Leader>c<space> :TToC!
    inoremap <Leader>c<space> <c-o>:TToC!

The following gives you a |[I| or |]I| like experience but with a IMHO more 
convenient UI:

    noremap  <Leader>c#       :TToC! <c-r><c-w><cr>
    inoremap <Leader>c#       <c-o>:TToC! <c-r><c-w><cr>

Or open the search in a "background" window:

    noremap  <Leader>cb       :Ttocbg! <c-r><c-w><cr>
    inoremap <Leader>cb       <c-o>:Ttocbg! <c-r><c-w><cr>

Key maps in the list view:
    <c-p>   ... preview selected item
    <cr>    ... close the TOC and jump to the selected item
    <space> ... jump to the selected item but don't close the TOC
    <esc>   ... close the TOC, jump back to the original position


========================================================================
Contents~

        :TToC ............. |:TToC|
        :Ttoc ............. |:Ttoc|
        :Ttocbg ........... |:Ttocbg|


========================================================================
plugin/ttoc.vim~

                                                    *:TToC*
:[COUNT]TToC[!] [REGEXP]
    EXAMPLES: >
      TToC                   ... use standard settings
      TToC foo.\{-}\ze \+bar ... show this rx (don't include 'bar')
      TToC! foo.\{-}bar      ... show lines matching this rx 
      3TToC! foo.\{-}bar     ... show lines matching this rx + 3 extra lines
<

                                                    *:Ttoc*
:Ttoc
    Synonym for |:TToC|.

                                                    *:Ttocbg*
:Ttocbg
    Like |:TToC| but open the list in "background", i.e. the focus stays 
    in the document window.



vim:tw=78:fo=tcq2:isk=!-~,^*,^|,^":ts=8:ft=help:norl:
