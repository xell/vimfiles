*increment_new.txt*	Pattern-Based Incrementing		February 4, 2005

"=============================================================================
" Author: Ely Schoenfeld (ely at nauta.com.mx)
"         Based on work done by: William Natter (natter at magma.ca)
"                                (vimscript #842)
"         That was based on work done by: Stanislav Sitar (sitar at procaut.sk)
"                                (vimscript #145),
" Doc Creation Date: February 4, 2005
" Doc Last Modified: February 4, 2005
" Doc Version: 1.0
" For Plugin Version: 1.0
"=========================================================================

==============================================================================
1. Increasing/Decreasing Lists		*Inc*

1.1 Getting Started

The "increment" plugin makes easy creating lists with incremented or decremented
numbers.  Here is an example:

Examples: |Inc_Ex_toc|

1.2 Command syntax:

   :[line1,line2]Inc [i<number>] [s<number>] [p<regexp>] [w<number>] [c]

   INCREMENT [i<number>]:  to change the increment between two consecutive 
                           matching lines
   STARTING  [s<number>]:  to change the starting value
   PATTERN   [p<regexp>]:  if not using w parameter:
                               to replace the pattern
                           if using w parameter: 
                               to search the line that matches the patern and
                               change a specific word

                           NOTE: The regexp should be escaped. Be careful to:
                                 a) use \ before spaces
                                 b) \\ to place a literal \
                                 c) \< or \> to place a literal < or > (Since Vim7)

   WORD      [w<number>]:  to replace the <number>th word from the beginning of
                           the line (0 for the beginning)

   CONFIRM   [c]        :  to confirm each substitution.


       NOTE: the default values are: (this can be changed)
                 i: 1
                 s: 0
                 p: @
                 w: not active
                 c: not active

                                              *Inc_Ex_toc*
1.3 EXAMPLES

    1.3.1 Simplest |Inc_Ex_simplest|
    1.3.2 Changing the increment pattern |Inc_Ex_chpat|
    1.3.3 Changing the increment value |Inc_Ex_chinc|
    1.3.4 Changing the starting value |Inc_Ex_chst|
    1.3.5 The patterns to replace are located sparsely throughout 
          the file |Inc_Ex_spar|
    1.3.6 The patterns to replace can be placed in the same line |Inc_Ex_same|
    1.3.7 Using the "w" and "c" parameters |Inc_Ex_w|


                                              *Inc_Ex_simplest*
1.3.1 Simplest

        This is line @
        This is line @
        This is line @
        This is line @
        This is line @
    
    The "@" character (the default) acts as a placeholder for the number.  The "Inc"
    command substitues the pattern with the desired sequence of numbers.  By typing
    ":1,5Inc", one obtains:
    
        This is line 0
        This is line 1
        This is line 2
        This is line 3
        This is line 4
    
                                              *Inc_Ex_chpat*
1.3.2 Changing the increment pattern

    To change "@" with "zorglub", have the following lines handy:
    
        This is line zorglub
        This is line zorglub
        This is line zorglub
        This is line zorglub
        This is line zorglub
    
    then type ":1,5Inc pzorglub":
    
        This is line 0
        This is line 1
        This is line 2
        This is line 3
        This is line 4

                                              *Inc_Ex_chinc*
1.3.3 Changing the increment value

    To change the value of the increment from 1 to 5, add "i5" to the command.  You
    just have to type ":1,5Inc pzorglub i5".  The result is:
    
        This is line 0
        This is line 5
        This is line 10
        This is line 15
        This is line 20

                                              *Inc_Ex_chst*
1.3.4 Changing the starting value

    To change the starting value from 0 to 100, add "s100" to the command.  You just
    have to type ":1,5Inc pzorglub i5 s100".  The result is:
    
        This is line 100
        This is line 105
        This is line 110
        This is line 115
        This is line 120
    
    The order of the optional arguments does not matter, so you could also have typed
    ":1,5Inc s100 i5 pzorglub".    

                                              *Inc_Ex_spar*
1.3.5 The patterns to replace are located sparsely throughout the file

    You have:

        This is line @
        Garbage text in between
        More garbage text in between
        ...
        Stupid comments still in between
        This is line @
        And final comments
    
    With "%Inc s1", the above text becomes:
    
        This is line 1
        Garbage text in between
        More garbage text in between
        ...
        Stupid comments still in between
        This is line 2
        And final comments
    
                                              *Inc_Ex_same*
1.3.6 The patterns to replace can be placed in the same line

    With ":Inc i11 s4",
    
        This is a list: [@, @, @, @, @, @, @]
    
    becomes
    
        This is a list: [4, 15, 26, 37, 48, 59, 70]


                                              *Inc_Ex_w*
1.3.7 Using the "w" and "c" parameters

       You have: (beginning with spaces only) (with confirmation)
           ----- cut -----
                   LMsgInstall6 = 7; // @
                 LMsgInstall7 = 8;   // @
               LMsgInstall8 = 9;     // @

               {STANDALONE}
               LErrConnectionStandAlone1 = 10; //THIS
               LErrConnectionStandAlone3 = 7; //THIS
               LErrConnectionStandAlone5 = 12; //THIS
           {some text}
               LMsgExitConfirm = 30;
           ...
           ----- cut -----

       You do: (without confirmation)
           :'<,'>Inc p^\ *\\\<\[A-Za-z0-9_]*\\\>\ =\ [0-9]* w3 i25 s100 c

       You get:
           ----- cut -----
                   LMsgInstall6 = 100; // @
                 LMsgInstall7 = 125;   // @
               LMsgInstall8 = 150;     // @

               {STANDALONE}
               LErrConnectionStandAlone1 = 175; //THIS
               LErrConnectionStandAlone3 = 200; //THIS
               LErrConnectionStandAlone5 = 225; //THIS
           {some text}
               LMsgExitConfirm = 250;
           ...
           ----- cut -----

       Then you do: (without confirmation)
           :'<,'>Inc pTHIS w3 i3 s5

       You get:
           ----- cut -----
                   LMsgInstall6 = 100; // @
                 LMsgInstall7 = 125;   // @
               LMsgInstall8 = 150;     // @

               {STANDALONE}
               LErrConnectionStandAlone1 = 5; //THIS
               LErrConnectionStandAlone3 = 8; //THIS
               LErrConnectionStandAlone5 = 11; //THIS
           {some text}
               LMsgExitConfirm = 250;
           ...
           ----- cut -----

Happy vimming!

vim:ft=help
"=============================================================================
